<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
	
	<groupId>com.db</groupId>
	<artifactId>SpringDB</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>

  	<name>SpringDB</name>
  	<url>http://maven.apache.org</url>

  	<properties>
    	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    	<!-- Servlet -->
		<servlet.version>3.0.1</servlet.version>
		<!-- Taglibs -->
		<servlet.jstl.version>1.2</servlet.jstl.version>
    	<!-- Spring -->
		<spring.version>4.1.1.RELEASE</spring.version>
		<!-- Hibernate -->
		<hibernate.version>4.2.2.Final</hibernate.version>
		<!-- MySQL -->
		<mysql.version>5.1.19</mysql.version>
		<!-- JUnit -->
		<junit.version>4.11</junit.version>
		<!-- Mockito -->
		<mockito.version>1.9.5</mockito.version>
		<!-- Database Config -->
		<database.driverClass>com.mysql.jdbc.Driver</database.driverClass>
		<database.url>jdbc:mysql://localhost:3306/email_db</database.url>
		<database.username>root</database.username>
		<database.password>root</database.password>
	</properties>
	
	<dependencies>
		<!-- Servlet -->
		<dependency>
	        <groupId>javax.servlet</groupId>
	        <artifactId>javax.servlet-api</artifactId>
	        <version>${servlet.version}</version>
	        <scope>provided</scope>
		</dependency>
		<!-- Taglib -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${servlet.jstl.version}</version>
		</dependency>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		 <dependency>
        <groupId>org.springframework</groupId>
	        <artifactId>spring-context-support</artifactId>
	        <version>${spring.version}</version>
	    </dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<!-- Mysql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
			<scope>runtime</scope>
		</dependency>
		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Mockito -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
  	<!-- <profiles>
		<profile>
			<id>dev</id>
            we'll add more stuff here...
             refer variable at top
            
            <properties>
                <database.driverClassName>${db.driverClassName}</database.driverClassName>
                <database.url>${db.url}</database.url>
                <database.username>${db.username}</database.username>
                <database.password>${db.password}</database.password>
            </properties>

        </profile>
        <profile>
            <id>prod</id>
            ...and here
            <properties>
                <database.driverClass>com.mysql.jdbc.Driver</database.driverClass>
                <database.url>jdbc:mysql://localhost:3306/spring_db</database.url>
                <database.username>prod</database.username>
                <database.password>prod</database.password>
            </properties>
        </profile>
    </profiles> -->
    
    <build>

        <plugins>
 			<!-- Hibernate plugin read hibernate configuration and generate create script -->
			<plugin>
				<groupId>de.juplo</groupId>
				<artifactId>hibernate4-maven-plugin</artifactId>
				<version>1.1.0</version>
				<executions>
					<execution>
						<goals>
							<goal>export</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<hibernateDialect>org.hibernate.dialect.MySQLDialect</hibernateDialect>
					<hibernateConfig>${project.basedir}/src/main/resources/hibernate.cfg.xml</hibernateConfig>
					<outputFile>${project.basedir}/src/main/resources/scripts/create-schema.sql</outputFile>
					<target>SCRIPT</target>
					<type>BOTH</type>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>${mysql.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			
			
			<!-- SQL plugin connect to database and Executes SQL scripts from files or inline. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>${mysql.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<encoding>UTF-8</encoding>
					<driver>${database.driverClass}</driver>
					<url>${database.url}</url>
					<username>${database.username}</username>
					<password>${database.password}</password>
					<autocommit>true</autocommit>
					<sqlCommand>

					</sqlCommand>
					<srcFiles>
						<srcFile>${project.basedir}/src/main/resources/scripts/create-schema.sql</srcFile>
						<srcFile>${project.basedir}/src/main/resources/scripts/init-data.sql</srcFile>z
					</srcFiles>
				</configuration>
			</plugin>
			
			<!-- Complier plugin compiles Java sources. -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			
			<!-- Copy the resources to the output directory for including in the JAR. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<!-- specify UTF-8, ISO-8859-1 or any other file encoding -->
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

    </build>
</project>
